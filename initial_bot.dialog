{
   "$kind":"Microsoft.AdaptiveDialog",
   "$designer":{
      "name":"openaipoc",
      "description":"",
      "id":"A79tBe"
   },
   "autoEndDialog":true,
   "defaultResultProperty":"dialog.result",
   "triggers":[
      {
         "$kind":"Microsoft.OnConversationUpdateActivity",
         "$designer":{
            "id":"376720",
            "comment":"This trigger runs when a conversation update activity is sent to the bot. This indicates a user or bot being added or removed from a conversation."
         },
         "actions":[
            {
               "$kind":"Microsoft.Foreach",
               "$designer":{
                  "id":"518944",
                  "name":"Loop: for each item",
                  "comment":"For each member added to the conversation."
               },
               "itemsProperty":"turn.Activity.membersAdded",
               "actions":[
                  {
                     "$kind":"Microsoft.IfCondition",
                     "$designer":{
                        "id":"641773",
                        "name":"Branch: if/else",
                        "comment":"Checks that that member added ID does not match the bot ID. This prevents the greeting message from being sent when the bot is added to a conversation."
                     },
                     "condition":"=string(dialog.foreach.value.id) != string(turn.Activity.Recipient.id)",
                     "actions":[
                        {
                           "$kind":"Microsoft.SetProperty",
                           "$designer":{
                              "id":"3mL2Zc"
                           },
                           "property":"user.isNew",
                           "value":true
                        },
                        {
                           "$kind":"Microsoft.SendActivity",
                           "$designer":{
                              "id":"859266",
                              "name":"Send a response"
                           },
                           "activity":"${SendActivity_Greeting()}"
                        }
                     ]
                  }
               ],
               "value":"dialog.foreach.value"
            }
         ]
      },
      {
         "$kind":"Microsoft.OnMessageActivity",
         "$designer":{
            "id":"j29372a",
            "name":"Message trigger for commands"
         },
         "condition":"=startsWith(turn.Activity.Text, '$')",
         "actions":[
            {
               "$kind":"Microsoft.SwitchCondition",
               "$designer":{
                  "id":"switch123",
                  "name":"Switch for commands"
               },
               "condition":"=trim(substring(turn.Activity.Text, 1))",
               "cases":[
                  {
                     "value":"secret",
                     "actions":[
                        {
                           "$kind":"Microsoft.SendActivity",
                           "$designer":{
                              "id":"yx764e",
                              "name":"Send a response"
                           },
                           "activity":"${SendActivity_Secret()}"
                        }
                     ]
                  },
                  {
                     "value":"marco",
                     "actions":[
                        {
                           "$kind":"Microsoft.SendActivity",
                           "$designer":{
                              "id":"yx944e",
                              "name":"Send a response"
                           },
                           "activity":"${SendActivity_Marco()}"
                        }
                     ]
                  },
                  {
                     "value":"new",
                     "actions":[
                        {
                           "$kind":"Microsoft.DeleteProperties",
                           "$designer":{
                              "id":"dp12345",
                              "name":"Delete Properties"
                           },
                           "properties":[
                              "user.inputData"
                           ]
                        },
                        {
                           "$kind":"Microsoft.SetProperty",
                           "$designer":{
                              "id":"sp12345",
                              "name":"Set Empty Array"
                           },
                           "property":"user.inputData",
                           "value":[
                              
                           ]
                        },
                        {
                           "$kind":"Microsoft.SendActivity",
                           "$designer":{
                              "id":"yx764e",
                              "name":"Send a response"
                           },
                           "activity":"You have invoked the reset!  Your bot has a fresh new memory!  Start again!"
                        }
                     ]
                  }
               ],
               "default":[
                  {
                     "$kind":"Microsoft.SendActivity",
                     "$designer":{
                        "id":"yx833q",
                        "name":"Send a response"
                     },
                     "activity":"${SendActivity_UnknownCommand()}"
                  }
               ]
            }
         ]
      },
      {
         "$kind":"Microsoft.OnUnknownIntent",
         "$designer":{
            "id":"mb2n1u",
            "comment":"This trigger fires when an incoming activity is not handled by any other trigger."
         },
         "actions":[
            {
               "$kind":"Microsoft.SetProperty",
               "$designer":{
                  "id":"RrmGGJ"
               },
               "property":"user.data",
               "value":[
                  {
                     "role":"user",
                     "content":"just setting user.data"
                  }
               ]
            },
            {
               "$kind":"Microsoft.IfCondition",
               "$designer":{
                  "id":"FUCDpa"
               },
               "condition":"=user.isNew",
               "actions":[
                  {
                     "$kind":"Microsoft.SetProperty",
                     "$designer":{
                        "id":"um2TVI"
                     },
                     "property":"user.isNew",
                     "value":false
                  },
                  {
                     "$kind":"Microsoft.SetProperty",
                     "$designer":{
                        "id":"ObMuYq"
                     },
                     "property":"user.inputData",
                     "value":[
                        {
                           "role":"user",
                           "content":"${turn.activity.text}"
                        }
                     ]
                  }
               ],
               "elseActions":[
                  {
                     "$kind":"Microsoft.SetProperty",
                     "$designer":{
                        "id":"K1OgeX"
                     },
                     "property":"turn.newInput",
                     "value":[
                        {
                           "role":"user",
                           "content":"${turn.activity.text}"
                        }
                     ]
                  },
                  {
                     "$kind":"Microsoft.SetProperty",
                     "$designer":{
                        "id":"onFGGe"
                     },
                     "property":"user.inputData",
                     "value":"=union(user.inputData,turn.newInput)"
                  }
               ]
            },
            {
               "$kind":"Microsoft.HttpRequest",
               "$designer":{
                  "id":"KXxrGs",
                  "comment":"Send user input to Azure OpenAI endpoint"
               },
               "resultProperty":"turn.results",
               "method":"POST",
               "url":"=settings.OPENAI_API_BASE_URL + '/' + settings.OPENAI_API_DEPLOYMENT + '?api-version=' + settings.OPENAI_API_VERSION",
               "body":{
                  "messages":"=user.inputData"
               },
               "headers":{
                  "api-key":"=settings.OPENAI_API_KEY"
               },
               "responseType":"json",
               "contentType":"application/json"
            },
            {
               "$kind":"Microsoft.SendActivity",
               "$designer":{
                  "id":"ElBrU1"
               },
               "activity":"${SendActivity_ElBrU1()}"
            },
            {
               "$kind":"Microsoft.SetProperty",
               "$designer":{
                  "id":"Qct06m"
               },
               "property":"turn.outputData",
               "value":[
                  {
                     "role":"assistant",
                     "content":"=turn.results.content.choices[0].message.content"
                  }
               ]
            },
            {
               "$kind":"Microsoft.SetProperty",
               "$designer":{
                  "id":"y5uhMx"
               },
               "property":"user.inputData",
               "value":"=union(user.inputData,turn.outputData)"
            }
         ]
      }
   ],
   "generator":"openaipoc.lg",
   "id":"openaipoc",
   "recognizer":"initial_bot.lu.qna"
}